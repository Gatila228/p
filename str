#include <iostream>
#include <vector>

#pragma warning(disable : 4018)

#ifndef STRLIB
#define STRLIB
    class str : public std::string {
        using std::string::string;
    public:
        str operator +(const char* s) {
            str r = *this;
            r += s;
            return r;
        }
        int index(str text) {
            int ind = -1;
            for(int i = 0, j = 0; i < this->size(); i++) {
                if(j == text.size())
                    return ind;
                if(this->operator[](i) == text[j]) {
                    if(ind == -1)
                        ind = i;
                    j++;
                }
                else {
                    if(j != 0)
                        i--;
                    j = (ind = 0)--;
                }
            }
            return -1;
        }
        int index(char c) {
            for(int i = 0, j = 0; i < this->size(); i++) {
                if(this->operator[](i) == c) {
                    return i;
                }
            }
            return -1;
        }
        int count(char text) {
            int j = 0;
            for(int i = 0; i < this->size(); i++) {
                if(this->operator[](i) == text) {
                    j++;
                }
            }
            return j;
        }
        std::vector<str> slace(char separator) {
            std::vector<str> s;
            *this += separator;
            str temp = "";
            for(int i = 0; i < count(separator); i++) {
                if(this->operator[](i) == separator && temp != "") {
                    s.push_back(temp);
                    temp.clear();
                }
                temp += this->operator[](i);
            }
            return s;
        }
        str between(char first, char last) {//+
            str s = "";
            int from = this->index(first) + 1;
            int to = this->cut(0, index(first)).index(last) + from;
            for(int i = from; i < to; i++)
                s += this->operator[](i);
            return s;
        }
        str between(int first, int last) {//+
            str s = "";
            for(int i = first; i < last; i++)
                s += this->operator[](i);
            return s;
        }
        str remove(str text) {
            str s = *this;
            while(s.index(text) != -1)
                s = s.cut(s.index(text), s.index(text));
            return s;
        }
        str cut(int start, int end) {
            str s = "";
            for(int i = 0; i < this->size(); i++) {
                if(i == start)
                    i = end + 1;
                s += this->operator[](i);
            }
            return s;
        }
    };
#endif